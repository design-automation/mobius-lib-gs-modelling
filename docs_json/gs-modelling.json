{
	"id": 0,
	"name": "gs-modelling",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"list\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Dropbox/Files/Software/GitHub/gs-modelling/src/gs-modelling/lib/list.ts",
			"comment": {
				"shortText": "Lists are a tool to manage a collection of data.<br/>",
				"text": "Any information can be stored in a list (including other lists) and they are refered to as items.<br/>\nItems in a list are ordered and will be returned in the same order or accessed by the same index unless\nchanges are made to alter it.<br/>\n\nTo create an empty list, use the assignment button and define the value as <code>[]</code><br/>\nTo access an item from a list, use <code>list_name[index_num]</code>. This can also be entered directly\ninto functions.\n"
			},
			"children": [
				{
					"id": 2,
					"name": "Copy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "Copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Duplicates a list",
								"returns": "New duplicated list\n"
							},
							"parameters": [
								{
									"id": 4,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to duplicate"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 29,
							"character": 20
						}
					]
				},
				{
					"id": 5,
					"name": "FromRange",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 6,
							"name": "FromRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new list of integers between two integers",
								"text": "Bottom bound number is inclusive and top bound number is exclusive<br/>",
								"returns": "New list\n"
							},
							"parameters": [
								{
									"id": 7,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Bottom bound integer"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 8,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Top bound integer"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 41,
							"character": 25
						}
					]
				},
				{
					"id": 12,
					"name": "append",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 13,
							"name": "append",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds an item to the end of a list",
								"text": "If item is a list, the entire list will be appended as one item<br/>\nAlters original input list",
								"returns": "List with added item\n"
							},
							"parameters": [
								{
									"id": 14,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to add to"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 15,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Item to add"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 67,
							"character": 22
						}
					]
				},
				{
					"id": 16,
					"name": "appendFront",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 17,
							"name": "appendFront",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds an item to the front of a list",
								"text": "If item is a list, the entire list will be appended as one item<br/>\nAlters original input list",
								"returns": "List with added item\n"
							},
							"parameters": [
								{
									"id": 18,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to add to"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 19,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Item to add"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 81,
							"character": 27
						}
					]
				},
				{
					"id": 20,
					"name": "extend",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 21,
							"name": "extend",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds items (from a list) to the end of an list",
								"text": "Items are appended to list individually as seperate items<br/>\nDoes not alter original input list",
								"returns": "List with added items\n"
							},
							"parameters": [
								{
									"id": 22,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to add to"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 23,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List of items to add"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 95,
							"character": 22
						}
					]
				},
				{
					"id": 24,
					"name": "extendFront",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 25,
							"name": "extendFront",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds items (from a list) to the front of an list",
								"text": "Items are appended to list individually as seperate items<br/>\nDoes not alter original input list",
								"returns": "List with added items\n"
							},
							"parameters": [
								{
									"id": 26,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to add to"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 27,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List of items to add"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 108,
							"character": 27
						}
					]
				},
				{
					"id": 28,
					"name": "flatten",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 29,
							"name": "flatten",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flattens an n-dimensional list into a one-dimensional list",
								"text": "Alters input list<br/>\nList returned will be in order",
								"returns": "Flattened list\n"
							},
							"parameters": [
								{
									"id": 30,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to add to"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 120,
							"character": 23
						}
					]
				},
				{
					"id": 9,
					"name": "length",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 10,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of items in an list",
								"returns": "Length of specified list\n"
							},
							"parameters": [
								{
									"id": 11,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 54,
							"character": 22
						}
					]
				},
				{
					"id": 31,
					"name": "removeIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 32,
							"name": "removeIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the item with the specified index number from a list",
								"text": "Alters input list",
								"returns": "List with item removed\n"
							},
							"parameters": [
								{
									"id": 33,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to remove item from"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 34,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Index number of item to remove"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 132,
							"character": 27
						}
					]
				},
				{
					"id": 35,
					"name": "removeValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 36,
							"name": "removeValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes items that match specified value from a list",
								"text": "Alters input list<br/>\nItems must match both the value and type of specified value<br/>\nReturns original list if no items in list match specified value",
								"returns": "List with item removed\n"
							},
							"parameters": [
								{
									"id": 37,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to remove item from"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 38,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Value to search for"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 39,
									"name": "remove_all",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Removes all instances of specified value if true, removes only the first instance if\n       false"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 149,
							"character": 27
						}
					]
				},
				{
					"id": 40,
					"name": "reverse",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 41,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverses the order of items in an list",
								"text": "Alters input list",
								"returns": "New reversed list\n"
							},
							"parameters": [
								{
									"id": 42,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to reverse"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 166,
							"character": 23
						}
					]
				},
				{
					"id": 49,
					"name": "slice",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 50,
							"name": "slice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes items with index numbers that fall within a range from a list and return them",
								"text": "Alters input list<br/>\nBottom bound number of range is inclusive, top bound number is exclusive",
								"returns": "List of removed items\n"
							},
							"parameters": [
								{
									"id": 51,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List slice"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 52,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Bottom bound number of range"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 53,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Top bound number of range"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 209,
							"character": 21
						}
					]
				},
				{
					"id": 43,
					"name": "sortAplha",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 44,
							"name": "sortAplha",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts a list of strings alphabetically",
								"text": "Alters input list<br/>\nIf items are not strings, they are treated as strings<br/>\nItems are sorted according to string Unicode code points (character by character, numbers before upper case\nalphabets, upper case alphabets before lower case alphabets)",
								"returns": "New sorted list\n"
							},
							"parameters": [
								{
									"id": 45,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to sort"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 181,
							"character": 25
						}
					]
				},
				{
					"id": 46,
					"name": "sortNum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 47,
							"name": "sortNum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts a list of numbers in ascending order",
								"text": "Alters input list<br/>\nList must contain numbers",
								"returns": "New sorted list\n"
							},
							"parameters": [
								{
									"id": 48,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to add to"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 194,
							"character": 23
						}
					]
				},
				{
					"id": 54,
					"name": "splice",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 55,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds and/or removes items to/from a list at a specific point and returns removed items",
								"text": "Alters input list<br/>\nIf no items to add are specified, only removes items<br/>\nIf howmany specified as 0, only adds items",
								"returns": "List of removed items\n"
							},
							"parameters": [
								{
									"id": 56,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List to splice"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 57,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Index number of position to add/remove (items added/removed after specified index)"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58,
									"name": "howmany",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Number of items to remove"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Items to add"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "list.ts",
							"line": 225,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2,
						5,
						12,
						16,
						20,
						24,
						28,
						9,
						31,
						35,
						40,
						49,
						43,
						46,
						54
					]
				}
			],
			"sources": [
				{
					"fileName": "list.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 60,
			"name": "\"math\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Dropbox/Files/Software/GitHub/gs-modelling/src/gs-modelling/lib/math.ts",
			"comment": {
				"shortText": "Math contains funtions for calculations, analysing numbers and representing numbers like pi and infinty."
			},
			"children": [
				{
					"id": 65,
					"name": "NEGATIVE_INFINITY",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 66,
							"name": "NEGATIVE_INFINITY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value of negative infinity",
								"returns": "Value of negative infinity\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 32,
							"character": 33
						}
					]
				},
				{
					"id": 61,
					"name": "PI",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 62,
							"name": "PI",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value of pi",
								"returns": "Value of pi\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 16,
							"character": 18
						}
					]
				},
				{
					"id": 63,
					"name": "POSITIVE_INFINITY",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 64,
							"name": "POSITIVE_INFINITY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value of positive infinity",
								"returns": "Value of positive infinity\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 24,
							"character": 33
						}
					]
				},
				{
					"id": 86,
					"name": "abs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 87,
							"name": "abs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the absolute value of a number",
								"text": "Returns num if num is positive, -num if num is negative and 0 if num=0<br/>",
								"returns": "A number representing the absolute value of the specified number\n"
							},
							"parameters": [
								{
									"id": 88,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 109,
							"character": 19
						}
					]
				},
				{
					"id": 80,
					"name": "ceiling",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "ceiling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rounds a number up to the nearest integer",
								"returns": "A number representing the smallest integer more than or equal to the specified number\n"
							},
							"parameters": [
								{
									"id": 82,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 87,
							"character": 23
						}
					]
				},
				{
					"id": 67,
					"name": "cos",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "cos",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the cosine of a specified angle in degrees",
								"returns": "Cosine of angle\n"
							},
							"parameters": [
								{
									"id": 69,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Angle in degrees"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 46,
							"character": 19
						}
					]
				},
				{
					"id": 83,
					"name": "floor",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 84,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rounds a number down to the nearest integer",
								"returns": "A number representing the largest integer less than or equal to the specified number\n"
							},
							"parameters": [
								{
									"id": 85,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 97,
							"character": 21
						}
					]
				},
				{
					"id": 89,
					"name": "max",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 90,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the largest number in a list of numbers",
								"returns": "A number representing the largest number in specified list of numbers\n"
							},
							"parameters": [
								{
									"id": 91,
									"name": "nums",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "List of numbers"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 119,
							"character": 19
						}
					]
				},
				{
					"id": 92,
					"name": "min",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 93,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the smallest number in a list of numbers",
								"returns": "A number representing the smallest number in specified list of numbers\n"
							},
							"parameters": [
								{
									"id": 94,
									"name": "nums",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 135,
							"character": 19
						}
					]
				},
				{
					"id": 76,
					"name": "pow",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 77,
							"name": "pow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a number representing the given base taken to the power of the given exponent",
								"returns": "Number representing the given base taken to the power of the given exponent\n"
							},
							"parameters": [
								{
									"id": 78,
									"name": "base",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Base number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 79,
									"name": "exponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Power of exponent"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 77,
							"character": 19
						}
					]
				},
				{
					"id": 95,
					"name": "random",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 96,
							"name": "random",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a pseudo-random number between 0 (inclusive) and 1 (exclusive)",
								"text": "Number can be scaled to apply for a larger range",
								"returns": "A pseudo-random number\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 153,
							"character": 22
						}
					]
				},
				{
					"id": 97,
					"name": "randomInt",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 98,
							"name": "randomInt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a pseudo-random integer between two numbers",
								"text": "Bottom bound number is inclusive and top bound number is exclusive",
								"returns": "A pseudo-random number\n"
							},
							"parameters": [
								{
									"id": 99,
									"name": "bottom_bound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Bottom bound number of range"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 100,
									"name": "top_bound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Top bound number of range"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 166,
							"character": 25
						}
					]
				},
				{
					"id": 101,
					"name": "randomIntInclusive",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 102,
							"name": "randomIntInclusive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a pseudo-random integer between two numbers",
								"text": "Bottom and top bound numbers are inclusive",
								"returns": "A pseudo-random number\n"
							},
							"parameters": [
								{
									"id": 103,
									"name": "bottom_bound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Bottom bound number of range"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 104,
									"name": "top_bound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Top bound number of range"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 181,
							"character": 34
						}
					]
				},
				{
					"id": 70,
					"name": "sin",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 71,
							"name": "sin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the sine of a specified angle in degrees",
								"returns": "Sine of angle\n"
							},
							"parameters": [
								{
									"id": 72,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Angle in degrees"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 56,
							"character": 19
						}
					]
				},
				{
					"id": 73,
					"name": "tan",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 74,
							"name": "tan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the tangent of a specified angle in degrees",
								"returns": "Tangent of angle\n"
							},
							"parameters": [
								{
									"id": 75,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Angle in degrees"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "math.ts",
							"line": 66,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						65,
						61,
						63,
						86,
						80,
						67,
						83,
						89,
						92,
						76,
						95,
						97,
						101,
						70,
						73
					]
				}
			],
			"sources": [
				{
					"fileName": "math.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 105,
			"name": "\"string\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Dropbox/Files/Software/GitHub/gs-modelling/src/gs-modelling/lib/string.ts",
			"comment": {
				"shortText": "String functions return properties and perform actions on strings"
			},
			"children": [
				{
					"id": 106,
					"name": "endsWith",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 107,
							"name": "endsWith",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if a string ends with the characters of a specified string",
								"returns": "True if str_1 ends with str_2, false if str_1 does not end with str_2\n"
							},
							"parameters": [
								{
									"id": 108,
									"name": "str_1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 109,
									"name": "str_2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String of characters to check for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "string.ts",
							"line": 21,
							"character": 24
						}
					]
				},
				{
					"id": 110,
					"name": "includes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 111,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if a string contains a specified string of characters",
								"returns": "True if str_1 contains str_2, false if str_1 does not contain str_2\n"
							},
							"parameters": [
								{
									"id": 112,
									"name": "str_1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 113,
									"name": "str_2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to search for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "string.ts",
							"line": 31,
							"character": 24
						}
					]
				},
				{
					"id": 114,
					"name": "length",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 115,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of characters in a string",
								"returns": "Length of string\n"
							},
							"parameters": [
								{
									"id": 116,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to find length of"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "string.ts",
							"line": 40,
							"character": 22
						}
					]
				},
				{
					"id": 117,
					"name": "replace",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 118,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Searches for a specified string of characters in a string and replaces them with another specified string\nof characters",
								"text": "To perfrom a case-insensitive search, use <code>/string/i</code> instead of <code>\"string\"</code> in search",
								"returns": "New string with replaced characters\n"
							},
							"parameters": [
								{
									"id": 119,
									"name": "str_1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 120,
									"name": "str_2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to search for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 121,
									"name": "str_3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to replace search value with"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "string.ts",
							"line": 54,
							"character": 23
						}
					]
				},
				{
					"id": 122,
					"name": "search",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 123,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the position index of where a specified string of characters can be found within a string",
								"text": "If specified string of characters cannot be found, returns -1",
								"returns": "Number that represents position of str_1 in str_2\n"
							},
							"parameters": [
								{
									"id": 124,
									"name": "str_1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 125,
									"name": "str_2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String of characters to check for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "string.ts",
							"line": 66,
							"character": 22
						}
					]
				},
				{
					"id": 126,
					"name": "substring",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 127,
							"name": "substring",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Extracts characters in a string between 2 specified indices and returns it as a new string",
								"text": "Start index is inclusive and end index is exclusive",
								"returns": "New string with extracted characters\n"
							},
							"parameters": [
								{
									"id": 128,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 129,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Index to start extracting characters"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 130,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Index to stop extracting characters"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "string.ts",
							"line": 79,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						106,
						110,
						114,
						117,
						122,
						126
					]
				}
			],
			"sources": [
				{
					"fileName": "string.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				60,
				105
			]
		}
	]
}